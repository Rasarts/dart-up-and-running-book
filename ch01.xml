<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="ch01">
  <?dbhtml stop-chunking?>

  <title>Быстрый старт</title>

  <para>Добро пожаловать в Dart, где с open-source платформой для разработки структурированных HTML5 веб-приложений, батарейки идут в комплекте. В этой главе рассказывается почему компания Google создала Dart, что крутого в Dart, и как написать и запустить свое первое Dart приложение.</para>

  <para>Dart обеспечивает не только новый язык, но и библиотеки, а так же редактор кода, и виртуальную машину (VM), и еще браузер (именуемый Dartium) который может запускать код Dart приложений нативно, и компилятор Dart кода в JavaScript для тех браузеров которые не поддерживают Dart. Dart стремится быть более продуктивным средством в разработке высокопроизводительных, современных приложений, которые требуют пользователи.</para>

  <sect1 id="ch01-why-dart">
    <title>Почему Google создал Dart</title>

    <para>Google сильно старается помочь в том что бы сделать веб удобным. Мы пишем много веб-приложений, многие из них довольно сложные - такие как Gmail, Календарь Google, Google +, и многое другое. Мы хотим что бы веб-приложения загружались быстро, работали плавно и вызывали необычные и забавные эмоции у пользователей. Мы хотим, чтобы разработчики с любым багажом знаний, имели возможность построить приложение с которым будет удобно взаимодействовать с помощью браузера.</para>

    <para>В качестве примера приверженности компании Google к сети, рассмотрим браузер Google Chrome. Google создал его для стимулирования конкуренции в то время, когда веб-платформа, казалось, находится в состоянии стагнации. Это сработало. <xref
    linkend="BrowserChart" /> показывает, с появлением Chrome в 2008 году, скорость браузеров возросла чрезвычайно.</para>

    <note>
      <para>За большую часть скорости бразуера Chrome отвечает механизм JavaScript известный как <firstterm>V8</firstterm>. Многие инженеры V8 теперь работают над Dart.</para>
    </note>

    <figure float="0" id="BrowserChart">
      <title>Скорость браузеров (V8 набор тестов v7; Чем выше показатели, тем лучше)</title>

      <mediaobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/daur_0101.png" format="PNG" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>Количество новых возможностей браузеров увеличилось, вместе с новыми API: WebGL, FileSystem, Web workers, и WebSockets. Появилась возможность автоматического обновления, обеспечивая быстрое внедрение новых возможностей и исправлений. Мобильные устройства, такие как телефоны и планшеты так же поддерживают много новых возможностей HTML5 в своих браузерах.</para>

    <para>Несмотря на эти улучшения, в плане упрощения работы разработчикам ситуация не улучшилась на столько, на сколько хотелось бы. Мы верим в то, что разработка крупных и сложных веб-приложений должна быть проще. Время для появления продуктивных инструментов на других платформах слишком затянулось, и они все еще не соответствуют ожиданиям. Вы не должны досконально изучать веб-программирование, что бы начать создавать сложные современные веб-приложения. И хотя системы JavaScript становятся все быстрее, разрабатывать веб-приложения по-прежнему сложно.</para>

    <para>Мы считаем Dart поможет в двух основных вещях:</para>

    <itemizedlist>
      <listitem>
        <para><emphasis>Более высокая производительность:</emphasis> Как VM инженеры, разработчики Dart знают как создать производительный язык. Структурированный язык легче оптимизировать, а новая VM обеспечивает более быстрый запуск.</para>
      </listitem>

      <listitem>
        <para><emphasis>Более высокая продуктивность:</emphasis> Поддержка библиотек и пакетов (packages) помогает взаимодействивать с другими разработчиками и легко повторно использовать код в других проектах. Типы помогут сделать API яснее и проще. Инструменты окажут помощь при рефакторинге кода, при перемещении по нему и его отладке. </para>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="ch01-quick-look">
    <title>Не большой обзор языка Dart</title>

    <para>Трудно говорить о языке, не видя его. Вот пример небольшой программы на Dart:</para>

    <programlisting format="linespecific" role="keep-together"><remark>lang-dart
</remark>import 'dart:math';

class Point {
  num x, y;
  Point(this.x, this.y);
  num distanceTo(Point other) {
    var dx = x - other.x;
    var dy = y - other.y;
    return sqrt(dx * dx + dy * dy);
  }
}

main() {
  var p = new Point(2, 3);
  var q = new Point(3, 4);
  print('distance from p to q = ${p.distanceTo(q)}');
}</programlisting>

    <para>Конечно основное предназначение Dart’а состоит в разработке современных веб-приложений.
    Простая работа с браузером:</para>

    <programlisting format="linespecific"><remark>lang-dart
</remark>import 'dart:html';

main() {
  var button = new ButtonElement();
  button..id = 'confirm'
        ..text = 'Click to Confirm'
        ..classes.add('important')
        ..onClick.listen((e) =&gt; window.alert('Confirmed!'));
  querySelector('#registration').children.add(button);
}</programlisting>

    <para>You’ll learn about the Dart language and libraries in Chapters <xref
    linkend="ch02" xrefstyle="select: labelnumber" /> and <xref linkend="ch03"
    xrefstyle="select: labelnumber" /> respectively.</para>
  </sect1>

  <sect1 id="ch01-whats-cool">
    <title>What’s Cool About Dart</title>

    <para>Dart may look familiar, but don’t let that fool you. Dart has lots
    of cool features to help give you a productive and fun experience building
    the next generation of awesome web apps.</para>

    <para><emphasis>Dart is easy to learn.</emphasis> A wide range of
    developers can learn Dart quickly. It’s an object-oriented language with
    classes, single inheritance, lexical scope, top-level functions, and a
    familiar syntax. Most developers are up and running with Dart in just a
    few hours.</para>

    <para><emphasis>Dart compiles to JavaScript.</emphasis> Dart has been
    designed from the start to compile to JavaScript, so that Dart apps can
    run across the entire modern web. Every feature considered for the
    language must somehow be translated to performant and logical JavaScript
    before it is added. Dart draws a line in the sand and doesn’t support
    older, legacy browsers.</para>

    <para><emphasis>Dart runs in the client and on the server.</emphasis> The
    Dart virtual machine (VM) can be integrated into a web browser, but it can
    also run standalone on the command line. With built-in library support for
    files, directories, sockets, and even web servers, you can use Dart for
    full end-to-end apps.</para>

    <para><emphasis>Dart comes with a lightweight editor.</emphasis> You can
    use Dart Editor to write, launch, and debug Dart apps. The editor can help
    you with code completion, detecting potential bugs, debugging both
    command-line and web apps, and even refactoring. Dart Editor isn’t
    required for writing Dart; it’s just a tool that can help you write better
    code faster.</para>

    <para><emphasis>Dart supports types, without requiring them.</emphasis>
    You can omit types when you want to move very quickly, aren’t sure what
    structure to take, or simply want to express something you can’t with the
    type system. You can add types as your program matures, the structure
    becomes more evident, and more developers join the project. Dart’s
    optional types are static type annotations that act as documentation,
    clearly expressing your intent. Using types means that fewer comments are
    required to document the code, and tools can give better warnings and
    error messages.</para>

    <para><emphasis>Dart scales from small scripts to large, complex
    apps.</emphasis> Web development is very much an iterative process. With
    the reload button acting as your compiler, building the seed of a web app
    is often a fun experience of writing a few functions just to experiment.
    As the idea grows, you can add more code and structure. Thanks to Dart’s
    support for top-level functions, optional types, classes, and libraries,
    your Dart programs can start small and grow over time. Tools such as Dart
    Editor help you refactor and navigate your code as it evolves.</para>

    <para><emphasis>Dart has a wide array of built-in libraries.</emphasis>
    The core library supports built-in types and other fundamental features
    such as collections, dates, and regular expressions. Web apps can use the
    HTML library—think DOM programming, but optimized for Dart. Command-line
    apps can use the I/O library to work with files, directories, sockets, and
    servers. Other libraries include URI, UTF, Crypto, Math, and Unit
    test.</para>

    <para><emphasis>Dart supports safe, simple concurrency with
    isolates.</emphasis> Traditional shared-memory threads are difficult to
    debug and can lead to deadlocks. Dart’s isolates, inspired by Erlang,
    provide an easier to understand model for running isolated, but
    concurrent, portions of your code. Spawning new isolates is cheap and
    fast, and no state is shared.</para>

    <para><emphasis>Dart supports code sharing.</emphasis> Traditional web
    programming workflows can’t integrate third-party libraries from arbitrary
    sources or frameworks. With the Dart package manager (pub) and language
    features such as libraries, you can easily discover, install, and
    integrate code from across the web and enterprise.</para>

    <para><emphasis>Dart is open source.</emphasis> Dart was born for the web,
    and it’s available under a BSD-style license. You can find the project’s
    <ulink url="http://dart.googlecode.com">issue tracker and source
    repository</ulink> online. Maybe you’ll submit the next patch?</para>
  </sect1>

  <sect1 id="ch01-editor">
    <title>Up and Running</title>

    <para>Now that you know something about Dart, get ready to code! These
    instructions feature the open-source Dart Editor tool. When you download
    Dart, you not only get Dart Editor, but also tools such as the
    Dart-to-JavaScript compiler and a version of Chromium (nicknamed
    <emphasis>Dartium</emphasis>) that includes the Dart VM.</para>

    <note>
      <para>If you run into trouble installing and using Dart Editor, see
      <ulink
      url="http://www.dartlang.org/tools/editor/troubleshoot.html">Troubleshooting
      Dart Editor.</ulink></para>
    </note>

    <sect2 id="ch01-editor-download">
      <title>Step 1: Download and Install the Software</title>

      <para>In this step, you’ll install Dart Editor and, if necessary, a Java
      runtime environment. (To avoid having to modify the PATH environment
      variable, you can install the JRE under your Dart installation
      directory, in a subdirectory named <code>jre</code>.)</para>

      <orderedlist continuation="restarts" inheritnum="ignore">
        <listitem>
          <para><ulink url="http://dartlang.org/#get-started">Download
          Dart</ulink>.</para>
        </listitem>

        <listitem>
          <para>Unarchive the file you downloaded. The resulting directory,
          which we’ll call your <emphasis>Dart installation
          directory</emphasis>, contains the <code>DartEditor</code>
          executable and several subdirectories.</para>
        </listitem>

        <listitem>
          <para>If you don’t already have a Java runtime, download and install
          it. Dart Editor requires Java version 6 or higher.</para>
        </listitem>
      </orderedlist>
    </sect2>

    <sect2 id="ch01-editor-launch">
      <title>Step 2: Launch the Editor</title>

      <para>Go to your Dart installation directory, and double-click the
      <emphasis role="bold">DartEditor</emphasis> executable<phrase
      role="keep-together"> <inlinemediaobject>
          <imageobject>
            <imagedata fileref="figs/web/Dart_Logo_21.png" format="PNG"
                       width="0.12in" />
          </imageobject>
        </inlinemediaobject>.</phrase></para>

      <para>You should see the Dart Editor application window appear, looking
      something like <xref linkend="DartEditor-initial" />.</para>

      <figure float="0" id="DartEditor-initial">
        <title>Dart Editor and its Welcome page</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata fileref="figs/web/daur_0102.png" format="PNG"
                       scale="30%" />
          </imageobject>
        </mediaobject>
      </figure>
    </sect2>

    <sect2 id="ch01-editor-sample">
      <title>Step 3: Open and Run a Demo</title>

      <para>The Dart Editor bundle comes with several demos and samples. In
      this step, you’ll open a web app and run it in Dartium.</para>

      <orderedlist continuation="restarts" inheritnum="ignore">
        <listitem>
          <para>Click the <emphasis role="bold">Welcome</emphasis> tab. Or
          choose <emphasis role="bold">Welcome Page</emphasis> from the
          <emphasis role="bold">Tools</emphasis> menu.</para>
        </listitem>

        <listitem>
          <para>In the Welcome tab, click the image labeled <emphasis
          role="bold">Sunflower</emphasis>. Dart Editor creates a copy of the
          <ulink
          url="http://code.google.com/p/dart/source/browse/trunk/dart/samples/sunflower/">Sunflower
          app’s directory,</ulink> and the Editor view displays the contents
          of <emphasis>web/sunflower.dart</emphasis>.</para>
        </listitem>

        <listitem>
          <para>Click the Run button <inlinemediaobject>
              <imageobject>
                <imagedata fileref="figs/web/run.png" width="0.12in" />
              </imageobject>
            </inlinemediaobject>. Dart Editor launches Dartium, which displays
          <phrase
          role="keep-together"><emphasis>sunflower.html</emphasis></phrase>.</para>

          <warning>
            <para>Dartium is a technical preview, and it might have security
            and stability issues.<emphasis> Do not use Dartium as your primary
            browser!</emphasis></para>
          </warning>
        </listitem>

        <listitem>
          <para>Move the slider to change the sunflower's display, as shown in
          <xref linkend="sunflower" />.</para>

          <figure float="none" id="sunflower">
            <title>The Sunflower sample running in Dartium</title>

            <mediaobject>
              <imageobject role="web">
                <imagedata fileref="figs/web/daur_0105.png" format="PNG"
                           scale="30%" />
              </imageobject>
            </mediaobject>
          </figure>
        </listitem>
      </orderedlist>
    </sect2>

    <sect2 id="ch01-editor-code">
      <title>Step 4: Create and Run an App</title>

      <para>It’s easy to create a simple web or command-line app from scratch.
      This step walks you through creating and running a command-line
      app.</para>

      <orderedlist continuation="restarts" inheritnum="ignore">
        <listitem>
          <para>Click the New Application button <inlinemediaobject>
              <imageobject>
                <imagedata fileref="figs/web/newapp.png" width="0.12in" />
              </imageobject>
            </inlinemediaobject> (at the upper left of Dart Editor).
          Alternatively, choose <emphasis role="bold">File &gt; New
          Application</emphasis> from the Dart Editor menu, or click the
          <emphasis role="bold">Create an Application…</emphasis> button in
          the Welcome page. A dialog appears (see <xref
          linkend="DartEditor-newapp" />).</para>
        </listitem>

        <listitem>
          <para>Type in a name for your application—for example,
          <code>hello_world</code>. If you don’t like the default directory,
          type in a new location or browse to choose the location.</para>
        </listitem>

        <listitem>
          <para>Make sure <emphasis role="bold">Generate sample
          content</emphasis> and <emphasis role="bold">Command-line
          application</emphasis> are selected. Then click <emphasis
          role="bold">Finish</emphasis> to create the initial files for the
          app.</para>

          <figure float="0" id="DartEditor-newapp">
            <title>Create command-line or web apps with Dart Editor</title>

            <mediaobject>
              <imageobject role="web">
                <imagedata fileref="figs/web/daur_0103.png" format="PNG"
                           scale="30%" />
              </imageobject>
            </mediaobject>
          </figure>

          <para>A default Dart file appears in the Edit view, and its
          directory appears in the Files view. Your Dart Editor window should
          look something like <xref linkend="DartEditor-helloworld" />.</para>

          <figure float="0" id="DartEditor-helloworld">
            <title>Dart Editor displaying a new app’s files</title>

            <mediaobject>
              <imageobject role="web">
                <imagedata fileref="figs/web/daur_0104.png" format="PNG"
                           scale="30%" />
              </imageobject>
            </mediaobject>
          </figure>
        </listitem>

        <listitem>
          <para>Click the Run button <inlinemediaobject>
              <imageobject>
                <imagedata fileref="figs/web/run.png" width="0.12in" />
              </imageobject>
            </inlinemediaobject> to run your new app.</para>

          <para>For command-line apps, the output of
          <literal>print()</literal> appears at the bottom right, in a new tab
          next to the Problems tab.</para>
        </listitem>
      </orderedlist>
    </sect2>

    <sect2 id="ch01-editor-next">
      <title>What Next?</title>

      <para>Now that you know the basics, you can learn more about Dart Editor
      and help <phrase role="keep-together">improve it</phrase>.</para>

      <sect3 id="ch01-editor-codelab">
        <title>Follow a code lab</title>

        <para>Go to <ulink
        url="https://www.dartlang.org/codelabs/">dartlang.org/codelabs</ulink>
        to find the
        latest step-by-step instructions for writing an app. The first code
        lab, <ulink url="https://www.dartlang.org/codelabs/darrrt/">Try
        Dart,</ulink> guides you through using Dart Editor to build and run a
        pirate name badge generator.</para>
      </sect3>

      <sect3 id="ch01-editor-tutorial">
        <title>Read tutorials</title>

        <para><ulink url="http://www.dartlang.org/docs/tutorials/">The Dart
        Tutorials</ulink> teach you how to build web applications using the
        Dart language, tools, and APIs.</para>
      </sect3>

      <sect3 id="ch01-editor-learn-more">
        <title>Become a power user</title>

        <para>Visit the <ulink url="http://www.dartlang.org/editor/">Dart
        Editor homepage</ulink> for help on using Dart Editor’s expanding
        feature set.</para>
      </sect3>

      <sect3 id="ch01-editor-feedback">
        <title>Send feedback</title>

        <para>Click the <emphasis role="bold">SEND FEEDBACK</emphasis> link
        (at the upper right of the Dart Editor window) whenever you notice a
        problem or have an idea for improving Dart Editor. We’ll open a new
        issue for you, if appropriate, without disclosing your sensitive or
        personally identifiable information.</para>
      </sect3>
    </sect2>
  </sect1>
</chapter>
